expr -> NUM_CONST
expr -> SYM
expr -> (expr)
expr -> SYM(expr)
expr -> expr + expr
expr -> expr - expr
expr -> expr, expr
list -> expr; expr
expr -> list

def -> ПУСТЬ SYM(SYM, ...) = expr

res -> ОТВЕТ SYM

--- example ---

2 + (2 + 2) - (2 - f(2 + f()(x) + x)) + 2

stack:
[+ [- [+ 2 [([+ 2 2])]] [- 2 [call f ([+ [+ 2 [call [call f] (x)]] x])]]] 2]


add(
  sub(
    add(
      2,
      add(2, 2)
    ),
    sub(
      2,
      f(
        add(
          add(
            2,
            f()(x)
          ),
          x
        )
      )
    )
  ),
  2
)






